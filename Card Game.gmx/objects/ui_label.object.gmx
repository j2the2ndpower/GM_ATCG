<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ui</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ui_defaults</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Copyright (c) 2013 NailBuster Software Inc.  all rights reserved.
/**********************

  This source code is provided 'as-is', without any express or implied warranty. 
  In no event will NailBuster Software Inc. be held liable for any damages arising from the use of this software.

      Permission is granted to use these components for non commercial applications, and to alter it for your needs,
    subject to the following restrictions:
    
  1. The origin of this software must not be misrepresented; you must not claim that you wrote the original source code 
     or components. If you use this software in a application, an acknowledgment in the product about/documentation would be appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
     You cannot distribute your modified sources of our component suite outside of your company.
  3. You cannot use this source or components in a tool or package designed to compete with NailBuster GUI component Suite. 
     For example,  you cannot modify and/or  improve these components and release under another component suite name.
  4. You cannot redistribute these source files outside of your compiled projects. All original Sources Files/Documentation 
     must originate from NailBuster Software Inc.  You cannot host or redistribute these source files. 
  
  If your application is used for commercial purposes, and will generate revenue directly or indirectly then you are required to 
  purchase a commercial license from NailBuster Software Inc.  Please visit www.nailbuster.com for purchasing information.
  If you have any questions about the license please contact us at david@nailbuster.com

**********************/


event_inherited();
uiDrawBackColor=false;
uiBackColor2=c_silver;   //used for shadows and outlines
canfocus=false;
multLines=false; //local
uiAutoWrap=true;
uiLineSpacing=1;
uiAlignV=fa_top;
uiCenterWrap=true;
uiDrawOutlines=0; //enter number of outlines (0=off, 1=offset 1)  uses uiBackColor2
uiDrawShadows=0; //enter number of outlines (0=off, 1=offset 1)  uses uiBackColor2
uiMemo='';   //set this if you want to wordwrap
items[0]='';   //array of strings in wordwrap
numitems=1;    //wordwrap don't set!
lasttext='';  //backup to check if changed.

curZoomFactor=1;
curAlpha=1;
curRot=0;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///break apart memo string
var curx,curword, curline, curst,fx,lh;

draw_set_font(uiFont);

curx = 0;
curst=uiTextValue;
curword='';
curline='';
fx=1;
items=0;  //reset items array
drawy=0;  //reset top pos
lastchar='';
while string_length(curst)&gt;fx
 {
 linebreak=false;
 //grab a word (repeat until ' ');
 curchar=string_char_at(curst,fx);
  while 1
     { 
       if (curchar != ' ') &amp;&amp; (curchar != chr(13)) &amp;&amp; (curchar != chr(10)) &amp;&amp; (curchar != '#')
           {curword = curword + curchar;}
       fx=fx+1;
       if fx&gt;string_length(curst) break;
       lastchar=curchar;
       curchar=string_char_at(curst,fx);       
       if (curchar== chr(10)) 
                           {  linebreak=true;                                  
                              break;
                           }                                                                                                 
       if (curchar== '#') {  if (lastchar != '\') {
                                                    linebreak=true;
                                                    break;
                                                  } 
                             else curword =curword+'#';
                          }   
       if (curchar==' ') break;                              
                                                
     }
  curword=curword+' ';
     
  if ((string_width(curline)+string_width(' '+curword))*uiXscale&lt;sprite_width -3)
    {curline=curline+curword;
     curword='';
    }  
    else {  //if line too long we append and create new string.
          items[curx]=curline;
          curx=curx+1;
          curline=curword;
         }
    
  if linebreak  //if chr(10) or '#'
    {
     items[curx]=curline;
     curx=curx+1;
     curline='';
    }
  curword='';            
 }
 
if curline !='' {items[curx]=curline;}

numitems=array_length_1d(items);

if numitems&gt;1 multLines=true else multLines=false;

lh=(string_height('XgpT')*uiYscale);   //lineheight;
uiCurHeight=(numitems * (lh+uiLineSpacing)) + 5;  //info only for other controls.







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Copyright (c) 2013 NailBuster Software Inc.  all rights reserved.
/**********************

  This source code is provided 'as-is', without any express or implied warranty. 
  In no event will NailBuster Software Inc. be held liable for any damages arising from the use of this software.

      Permission is granted to use these components for non commercial applications, and to alter it for your needs,
    subject to the following restrictions:
    
  1. The origin of this software must not be misrepresented; you must not claim that you wrote the original source code 
     or components. If you use this software in a application, an acknowledgment in the product about/documentation would be appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
     You cannot distribute your modified sources of our component suite outside of your company.
  3. You cannot use this source or components in a tool or package designed to compete with NailBuster GUI component Suite. 
     For example,  you cannot modify and/or  improve these components and release under another component suite name.
  4. You cannot redistribute these source files outside of your compiled projects. All original Sources Files/Documentation 
     must originate from NailBuster Software Inc.  You cannot host or redistribute these source files. 
  
  If your application is used for commercial purposes, and will generate revenue directly or indirectly then you are required to 
  purchase a commercial license from NailBuster Software Inc.  Please visit www.nailbuster.com for purchasing information.
  If you have any questions about the license please contact us at david@nailbuster.com

**********************/


var ymargin,disptx,px,py,fx,lh,cury,fg,curXscale,curYscale;

event_inherited();
if (uiZoomFactor==0.1) || (uiVisible==false) exit;  //for zooming     


curZoomFactor=uiZoomFactor+uiAniPulse;
curAlpha=uiAlpha-uiAniFading;
curRot=uiAngle+uiAniWobble;

curXscale=uiXscale+uiAniPulse;
curYscale=uiYscale+uiAniPulse;


draw_set_font(uiFont);
draw_set_halign(uiAlign);
draw_set_valign(uiAlignV);
//draw_set_alpha(curAlpha);


if (uiAniPulse != 0)  &amp;&amp; (uiPulseJello)
   { if uiAniPulse &gt;= 0  {curYscale=(uiYscale)-uiAniPulse;}
               else      {curXscale=(uiXscale)-uiAniPulse;}
   }  
             

if (lasttext!=uiTextValue) //|| (uiAniPulse!=0)  //if string is too long we need to wordwrap
 { 
  lasttext=uiTextValue;  //keep copy to see if changed.

//  if ((string_width(uiTextValue+'X') * curXscale) &gt; (sprite_width)) 
  if ((string_width(uiTextValue+'X')) &gt; (sprite_width))   
   {
     event_user(1); //breaks apart string into items array;
   } else 
       {multLines=false;  //reset if one line fits....
        items=0;
        items[0]=uiTextValue;
        numitems=1;
        };         
 }


if multLines==false {items[0]=uiTextValue;}    //if just one line then just set one array item;


lh=(string_height('XgpT')*curYscale);   //lineheight;
uiCurHeight=(numitems * (lh+uiLineSpacing));  //info only for other controls.



if uiDrawBackColor 
   {
    draw_roundrect_color_ext(x, y, x+sprite_width, y+sprite_height, uiRadiusX,uiRadiusY,uiBackColor,uiBackColor, false);   //fill
   } 

if (uiCenterWrap) || (numitems=1) {ymargin= (sprite_height - (uiCurHeight * curYscale)) div 2 ;} else {ymargin=0;}  //center in area or top

 
if uiAlign==fa_left { px=x +5; } 
 else if uiAlign==fa_middle {px= x + (sprite_width div 2); }
   else if uiAlign==fa_right {px = x+sprite_width -8; } 

   
cury=y+ymargin;   
   
if uiDrawOutlines&gt;0   //draw shadows
   {
    draw_set_color(uiBackColor2);  
     for (fg=1;fg&lt;=uiDrawOutlines;fg+=1)  
       {
        for (fx=0;fx&lt;numitems;fx+=1)   
          {  disptx=items[fx];
             draw_text_transformed(px,cury-fg,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px,cury+fg,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px+fg,cury,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px-fg,cury,disptx,curXscale,curYscale,curRot);                
             draw_text_transformed(px+fg,cury+fg,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px-fg,cury-fg,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px+fg,cury-fg,disptx,curXscale,curYscale,curRot);   
             draw_text_transformed(px-fg,cury+fg,disptx,curXscale,curYscale,curRot);                
             
             cury=cury+lh+uiLineSpacing;     
          }           
        cury=y+ymargin;    
       }   
   }
   
if uiDrawShadows&gt;0   //draw shadows
   {
    draw_set_color(uiBackColor2);  
     for (fg=1;fg&lt;=uiDrawShadows;fg+=1)  
       {
        for (fx=0;fx&lt;numitems;fx+=1)   
          {  disptx=items[fx];
             draw_text_transformed(px+fg,cury+fg,disptx,curXscale,curYscale,curRot);               
             cury=cury+lh+uiLineSpacing;     
          }           
        cury=y+ymargin;    
       }   
   }   
   


cury=y+ymargin;   

for (fx=0;fx&lt;numitems;fx+=1)   
  {  disptx=items[fx];
     draw_set_color(uiTextColor);  
     draw_text_transformed(px,cury,disptx,curXscale,curYscale,curRot);   
     cury=cury+lh+uiLineSpacing;     
  }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
